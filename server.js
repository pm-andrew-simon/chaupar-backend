// server.js
// –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∏–≥—Ä—ã –ß–∞—É–ø–∞—Ä

// 1. –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
const express = require('express');
// 2. –ü–æ–¥–∫–ª—é—á–∞–µ–º –Ω–∞—à–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –∫—É–±–∏–∫–∞–º–∏
const { generateDiceValues } = require('./dice');
// 3. –ü–æ–¥–∫–ª—é—á–∞–µ–º Supabase
const { supabase, testConnection } = require('./supabase');
// 4. –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–≥—Ä
const { updateGameState } = require('./gameData');

// 3. –°–æ–∑–¥–∞–µ–º Express-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–Ω–∞—à —Å–µ—Ä–≤–µ—Ä)
const app = express();
// 4. –†–∞–∑—Ä–µ—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É JSON –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö
app.use(express.json());

// 5. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º CORS - —Ä–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã —Å –¥—Ä—É–≥–∏—Ö –¥–æ–º–µ–Ω–æ–≤ (—Å –≤–∞—à–µ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞)
app.use((req, res, next) => {
    res.header('Access-Control-Allow-Origin', '*'); // –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ–º (*) –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π URL —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');
    next();
});

// 6. –°–æ–∑–¥–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã (—Ä–æ—É—Ç—ã) API

// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç - –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
app.get('/', (req, res) => {
    res.json({ 
        message: 'üéØ –°–µ—Ä–≤–µ—Ä –∏–≥—Ä—ã –ß–∞—É–ø–∞—Ä –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!',
        endpoints: {
            simpleRoll: '/api/roll/simple - –ü—Ä–æ—Å—Ç–æ–π –±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–æ–≤',
            updateGameState: 'PUT /api/game/state - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã'
        }
    });
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–æ–≤
app.get('/api/roll/simple', (req, res) => {
    try {
        const result = generateDiceValues();
        res.json({
            success: true,
            ...result
        });
    } catch (error) {
        res.status(500).json({ success: false, error: error.message });
    }
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
app.put('/api/game/state', async (req, res) => {
    try {
        const { chprId, gameState } = req.body;
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞–ª–∏—á–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        if (!chprId) {
            return res.status(400).json({
                success: false,
                error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä chprId'
            });
        }
        
        if (!gameState) {
            return res.status(400).json({
                success: false,
                error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä gameState'
            });
        }
        
        // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        const result = await updateGameState(chprId, gameState);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º HTTP —Å—Ç–∞—Ç—É—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        const statusCode = result.success ? 200 : 400;
        
        res.status(statusCode).json(result);
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ PUT /api/game/state:', error);
        res.status(500).json({
            success: false,
            message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è',
            error: error.message
        });
    }
});

// 7. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ—Ä—Ç (Render —Å–∞–º –¥–∞–µ—Ç –ø–æ—Ä—Ç —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è)
const PORT = process.env.PORT || 3000;

// 8. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
app.listen(PORT, async () => {
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –ß–∞—É–ø–∞—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üì° –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: ${process.env.RENDER_EXTERNAL_URL || `http://localhost:${PORT}`}`);
    console.log('üé≤ –ì–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –±—Ä–æ—Å–∫–∏ –∫—É–±–∏–∫–æ–≤!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase
    await testConnection();
});